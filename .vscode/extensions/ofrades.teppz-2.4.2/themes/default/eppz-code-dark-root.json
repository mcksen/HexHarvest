{
  "name": "eppz! Code",
  "include": "eppz-code-regions-using.json",
  "settings": [
    {
      "name": "Source",
      "scope": ["source"],
      "settings": {
        "foreground": "#dddcd3"
      }
    },
    {
      "name": "Keyword (operator)",
      "scope": ["keyword.operator"],
      "settings": {
        "foreground": "#b9b9b5",
        "fontStyle": "normal"
      }
    },
    {
      "name": "Punctuation",
      "scope": ["punctuation"],
      "settings": {
        "foreground": "#9c9d9d"
      }
    },
    {
      "name": "Punctuation (parenthesis)",
      "scope": ["punctuation.parenthesis", "meta.brace.round"],
      "settings": {
        "foreground": "#85878a"
      }
    },
    {
      "name": "Punctuation (square bracket)",
      "scope": ["punctuation.squarebracket", "meta.brace.square"],
      "settings": {
        "foreground": "#72757b"
      }
    },
    {
      "name": "Punctuation (curly brace)",
      "scope": ["punctuation.curlybrace"],
      "settings": {
        "foreground": "#63676f"
      }
    },
    {
      "name": "Comment",
      "scope": [
        "comment",
        "comment punctuation",
        "comment punctuation.parenthesis",
        "comment punctuation.squarebracket",
        "comment punctuation.curlybrace",
        "comment keyword",
        "comment entity",
        "comment variable",
        "comment string"
      ],
      "settings": {
        "foreground": "#575b65",
        "fontStyle": "italic"
      }
    },
    {
      "name": "Literals (Constant)",
      "scope": ["constant"],
      "settings": {
        "foreground": "#6074d2"
      }
    },
    {
      "name": "Literals (null)",
      "scope": ["constant.language.null"],
      "settings": {
        "foreground": "#58649a"
      }
    },
    {
      "name": "Literals (Number)",
      "scope": ["constant.numeric"],
      "settings": {
        "foreground": "#609ad2"
      }
    },
    {
      "name": "Literals (String)",
      "scope": ["string.quoted.double", "string.quoted.double punctuation"],
      "settings": {
        "foreground": "#60c0d2",
        "fontStyle": "italic"
      }
    },
    {
      "name": "Literals (Escape)",
      "scope": ["constant.character.escape"],
      "settings": {
        "foreground": "#588e9a"
      }
    },
    {
      "name": "Literals (Char)",
      "scope": ["string.quoted.single", "string.quoted.single punctuation"],
      "settings": {
        "foreground": "#60d2be"
      }
    },
    {
      "name": "Functions",
      "scope": [
        "entity.name.function",
        "entity.name.method",
        "keyword.other.get",
        "keyword.other.set",
        "keyword.other.add",
        "keyword.other.remove",
        "support.function",
        "keyword.operator.new",
        "support.constant.handlebars",
        "source.powershell variable.other.member",
        "entity.name.operator.custom-literal"
      ],
      "settings": {
        "foreground": "#4da586"
      }
    },
    {
      "name": "Functions (System)",
      "scope": ["support.function.System"],
      "settings": {
        "foreground": "#405651"
      }
    },
    {
      "name": "Types",
      "comment": "Including classes, delegates, enums, interfaces, structs.",
      "scope": [
        "storage.type",
        "entity.name.type.type-parameter",
        "support.type",
        "support.class",
        "entity.name.class",
        "variable.other.object.ts"
      ],
      "settings": {
        "foreground": "#b6776b"
      }
    },
    {
      "name": "Types (built-in)",
      "scope": ["keyword.type"],
      "settings": {
        "foreground": "#876560"
      }
    },
    {
      "name": "Types (<>)",
      "scope": ["punctuation.definition.typeparameters"],
      "settings": {
        "foreground": "#5e5050"
      }
    },
    {
      "name": "Types (System)",
      "scope": ["support.type.System"],
      "settings": {
        "foreground": "#5e5050"
      }
    },
    {
      "name": "Modifiers",
      "scope": ["storage.modifier"],
      "settings": {
        "foreground": "#5e5050"
      }
    },
    {
      "name": "Types (declarations)",
      "comment": "Including classes, delegates, enums, interfaces, structs.",
      "scope": ["entity.name.type"],
      "settings": {
        "foreground": "#d88e79"
      }
    },
    {
      "name": "Keywords",
      "scope": [
        "keyword.operator.conditional",
        "keyword.query"
      ],
      "settings": {
        "fontStyle": "normal",
        "foreground": "#cea47f"
      }
    },
    {
      "name": "Keywords (other)",
      "scope": ["keyword.other"],
      "settings": {
        "foreground": "#98816e"
      }
    },
    {
      "name": "Preprocessor",
      "scope": [
        "meta.preprocessor",
        "meta.preprocessor punctuation",
        "meta.preprocessor punctuation.parenthesis",
        "meta.preprocessor punctuation.squarebracket",
        "meta.preprocessor punctuation.curlybrace",
        "meta.preprocessor keyword"
      ],
      "settings": {
        "foreground": "#6b6459"
      }
    },
    {
      "name": "Preprocessor (entities)",
      "scope": [
        "meta.preprocessor entity",
        "meta.preprocessor entity.name.method",
        "meta.preprocessor entity.name.function",
        "meta.preprocessor entity.name.variable",
        "meta.preprocessor variable",
        "meta.preprocessor string"
      ],
      "settings": {
        "foreground": "#7d705d"
      }
    },
    {
      "name": "Variables",
      "scope": [
        "variable.other.readwrite",
        "variable.other.object",
        "variable.other.alias",
        "entity.name.variable",
        "variable.other.property",
        "variable.other.constant",
        "variable.parameter",
        "variable.object.property",
        "variable.object.constant",
        "support.variable"
      ],
      "settings": {
        "foreground": "#d9c679"
      }
    },
    {
      "name": "Key",
      "scope": ["meta.object-literal.key"],
      "settings": {
        "foreground": "#85946B"
      }
    },
    {
      "name": "Entity Other Inherited Class",
      "scope": ["entity.other.inherited-class"],
      "settings": {
        "foreground": "#CF7357"
      }
    },
    {
      "name": "this (local)",
      "scope": ["keyword.other.this", "variable.language.this"],
      "settings": {
        "foreground": "#5ED196",
        "fontStyle": "italic"
      }
    },
    {
      "name": "Variables (local)",
      "scope": [
        "variable.other.object.property",
        "entity.name.variable.local",
        "keyword.other.base",
        "variable.language.base"
      ],
      "settings": {
        "foreground": "#9d936a"
      }
    },
    {
      "name": "Variables (System)",
      "scope": ["support.variable.System"],
      "settings": {
        "foreground": "#6a6656"
      }
    },
    {
      "name": "Regular expression groups",
      "scope": [
        "punctuation.definition.group.regexp",
        "punctuation.definition.group.assertion.regexp",
        "punctuation.definition.character-class.regexp",
        "punctuation.character.set.begin.regexp",
        "punctuation.character.set.end.regexp",
        "keyword.operator.negation.regexp",
        "support.other.parenthesis.regexp"
      ],
      "settings": {
        "foreground": "#CE9178"
      }
    },
    {
      "scope": [
        "constant.character.character-class.regexp",
        "constant.other.character-class.set.regexp",
        "constant.other.character-class.regexp",
        "constant.character.set.regexp"
      ],
      "settings": {
        "foreground": "#d16969"
      }
    },
    {
      "scope": ["keyword.operator.or.regexp", "keyword.control.anchor.regexp"],
      "settings": {
        "fontStyle": "normal",
        "foreground": "#DCDCAA"
      }
    },
    {
      "scope": "keyword.operator.quantifier.regexp",
      "settings": {
        "foreground": "#d7ba7d"
      }
    },
    {
      "scope": "constant.character",
      "settings": {
        "foreground": "#569cd6"
      }
    },
    {
      "scope": "constant.character.escape",
      "settings": {
        "foreground": "#d7ba7d"
      }
    },
    {
      "scope": "entity.name.label",
      "settings": {
        "foreground": "#C8C8C8"
      }
    },
    {
      "name": "Types declaration and references, TS grammar specific",
      "scope": [
        "meta.type.cast.expr",
        "meta.type.new.expr",
        "support.constant.math",
        "support.constant.dom",
        "support.constant.json",
        "entity.other.inherited-class"
      ],
      "settings": {
        "foreground": "#4EC9B0"
      }
    }
  ]
}
